// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0

package db

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	DeleteAccess(ctx context.Context, id uuid.UUID) (*Access, error)
	DeleteGroup(ctx context.Context, id uuid.UUID) (*Group, error)
	DeleteGroupAccess(ctx context.Context, arg *DeleteGroupAccessParams) (*GroupAccess, error)
	DeleteSession(ctx context.Context, id uuid.UUID) (*Session, error)
	DeleteSystem(ctx context.Context, id uuid.UUID) (*System, error)
	DeleteUser(ctx context.Context, id uuid.UUID) (*User, error)
	DeleteUserAccess(ctx context.Context, arg *DeleteUserAccessParams) (*UserAccess, error)
	FindAccess(ctx context.Context, arg *FindAccessParams) ([]*Access, error)
	FindAccessPage(ctx context.Context, arg *FindAccessPageParams) ([]*Access, error)
	FindGroup(ctx context.Context, name string) ([]*Group, error)
	FindGroupAccess(ctx context.Context, arg *FindGroupAccessParams) ([]*GroupAccess, error)
	FindGroupAccessPage(ctx context.Context, arg *FindGroupAccessPageParams) ([]*GroupAccess, error)
	FindGroupPage(ctx context.Context, arg *FindGroupPageParams) ([]*Group, error)
	FindSession(ctx context.Context, user uuid.UUID) ([]*Session, error)
	FindSystem(ctx context.Context, name string) ([]*System, error)
	FindSystemPage(ctx context.Context, arg *FindSystemPageParams) ([]*System, error)
	FindUser(ctx context.Context, arg *FindUserParams) ([]*User, error)
	FindUserAccess(ctx context.Context, arg *FindUserAccessParams) ([]*UserAccess, error)
	FindUserAccessPage(ctx context.Context, arg *FindUserAccessPageParams) ([]*UserAccess, error)
	FindUserPage(ctx context.Context, arg *FindUserPageParams) ([]*User, error)
	GetAccess(ctx context.Context, id uuid.UUID) (*Access, error)
	GetGroup(ctx context.Context, id uuid.UUID) (*Group, error)
	GetGroupAccess(ctx context.Context, arg *GetGroupAccessParams) (*GroupAccess, error)
	GetSession(ctx context.Context, id uuid.UUID) (*Session, error)
	GetSystem(ctx context.Context, id uuid.UUID) (*System, error)
	GetUser(ctx context.Context, arg *GetUserParams) (*User, error)
	GetUserAccess(ctx context.Context, arg *GetUserAccessParams) (*UserAccess, error)
	ListAccess(ctx context.Context) ([]*Access, error)
	ListAccessPage(ctx context.Context, arg *ListAccessPageParams) ([]*Access, error)
	ListGroup(ctx context.Context) ([]*Group, error)
	ListGroupPage(ctx context.Context, arg *ListGroupPageParams) ([]*Group, error)
	ListSession(ctx context.Context) ([]*Session, error)
	ListSessionPage(ctx context.Context, arg *ListSessionPageParams) ([]*Session, error)
	ListSystem(ctx context.Context) ([]*System, error)
	ListSystemPage(ctx context.Context, arg *ListSystemPageParams) ([]*System, error)
	ListUser(ctx context.Context) ([]*User, error)
	ListUserPage(ctx context.Context, arg *ListUserPageParams) ([]*User, error)
	NewAccess(ctx context.Context, arg *NewAccessParams) (*Access, error)
	NewGroup(ctx context.Context, name string) (*Group, error)
	NewGroupAccess(ctx context.Context, arg *NewGroupAccessParams) (*GroupAccess, error)
	NewSession(ctx context.Context, arg *NewSessionParams) (*Session, error)
	NewSystem(ctx context.Context, arg *NewSystemParams) (*System, error)
	NewUser(ctx context.Context, arg *NewUserParams) (*User, error)
	NewUserAccess(ctx context.Context, arg *NewUserAccessParams) (*UserAccess, error)
	UpdateAccess(ctx context.Context, arg *UpdateAccessParams) (*Access, error)
	UpdateActiveSystem(ctx context.Context, arg *UpdateActiveSystemParams) (*System, error)
	UpdateGroup(ctx context.Context, arg *UpdateGroupParams) (*Group, error)
	UpdateGroupActive(ctx context.Context, arg *UpdateGroupActiveParams) (*Group, error)
	UpdateSystem(ctx context.Context, arg *UpdateSystemParams) (*System, error)
	UpdateUser(ctx context.Context, arg *UpdateUserParams) (*User, error)
	UpdateUserActive(ctx context.Context, arg *UpdateUserActiveParams) (*User, error)
}

var _ Querier = (*Queries)(nil)
